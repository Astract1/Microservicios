{"ast":null,"code":"import React from'react';import{createRoot}from'react-dom/client';import{BrowserRouter}from'react-router-dom';import App from'./App';import'./styles/global.css';// Ensure the root element exists\nimport{jsx as _jsx}from\"react/jsx-runtime\";const container=document.getElementById('root');if(!container){throw new Error('Failed to find the root element');}// Create root and render\nconst root=createRoot(container);// Wrap the app in error boundary and router\nroot.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(App,{})})}));","map":{"version":3,"names":["React","createRoot","BrowserRouter","App","jsx","_jsx","container","document","getElementById","Error","root","render","StrictMode","children"],"sources":["C:/Users/IRR/Desktop/Microservicios/packages/ui-risk/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './styles/global.css';\r\n\r\n// Ensure the root element exists\r\nconst container = document.getElementById('root');\r\nif (!container) {\r\n  throw new Error('Failed to find the root element');\r\n}\r\n\r\n// Create root and render\r\nconst root = createRoot(container);\r\n\r\n// Wrap the app in error boundary and router\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,MAAO,qBAAqB,CAE5B;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,SAAS,CAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CACjD,GAAI,CAACF,SAAS,CAAE,CACd,KAAM,IAAI,CAAAG,KAAK,CAAC,iCAAiC,CAAC,CACpD,CAEA;AACA,KAAM,CAAAC,IAAI,CAAGT,UAAU,CAACK,SAAS,CAAC,CAElC;AACAI,IAAI,CAACC,MAAM,cACTN,IAAA,CAACL,KAAK,CAACY,UAAU,EAAAC,QAAA,cACfR,IAAA,CAACH,aAAa,EAAAW,QAAA,cACZR,IAAA,CAACF,GAAG,GAAE,CAAC,CACM,CAAC,CACA,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}