{"ast":null,"code":"// src/services/riskService.js\nimport axios from'axios';const API_URL=process.env.REACT_APP_RISK_API_URL||'/api/risk';// Mock data for development\nconst mockResponse={riskLevel:'MEDIO',riskFactors:['Exposición a contaminantes del aire','Condiciones médicas preexistentes'],recommendations:['Usar mascarilla en exteriores','Mantener ventanas cerradas','Consultar con un médico si los síntomas persisten']};export const evaluateRisk=async data=>{try{// For development, return mock data\nif(process.env.NODE_ENV==='development'){console.log('Using mock data for development');return mockResponse;}const response=await axios.post(`${API_URL}/evaluate`,data);return response.data;}catch(error){console.error('Error en evaluación de riesgo:',error);// Return mock data if API fails\nif(process.env.NODE_ENV==='development'){console.warn('API call failed, using mock data');return mockResponse;}throw error;}};export const getHistoricalData=async userId=>{try{const response=await axios.get(`${API_URL}/historical/${userId}`);return response.data;}catch(error){console.error('Error obteniendo datos históricos:',error);throw error;}};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_RISK_API_URL","mockResponse","riskLevel","riskFactors","recommendations","evaluateRisk","data","NODE_ENV","console","log","response","post","error","warn","getHistoricalData","userId","get"],"sources":["C:/Users/IRR/Desktop/Microservicios/packages/ui-risk/src/services/riskService.js"],"sourcesContent":["// src/services/riskService.js\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_RISK_API_URL || '/api/risk';\n\n// Mock data for development\nconst mockResponse = {\n  riskLevel: 'MEDIO',\n  riskFactors: [\n    'Exposición a contaminantes del aire',\n    'Condiciones médicas preexistentes'\n  ],\n  recommendations: [\n    'Usar mascarilla en exteriores',\n    'Mantener ventanas cerradas',\n    'Consultar con un médico si los síntomas persisten'\n  ]\n};\n\nexport const evaluateRisk = async (data) => {\n  try {\n    // For development, return mock data\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Using mock data for development');\n      return mockResponse;\n    }\n\n    const response = await axios.post(`${API_URL}/evaluate`, data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en evaluación de riesgo:', error);\n    // Return mock data if API fails\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('API call failed, using mock data');\n      return mockResponse;\n    }\n    throw error;\n  }\n};\n\nexport const getHistoricalData = async (userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/historical/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error obteniendo datos históricos:', error);\n    throw error;\n  }\n};"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,WAAW,CAEjE;AACA,KAAM,CAAAC,YAAY,CAAG,CACnBC,SAAS,CAAE,OAAO,CAClBC,WAAW,CAAE,CACX,qCAAqC,CACrC,mCAAmC,CACpC,CACDC,eAAe,CAAE,CACf,+BAA+B,CAC/B,4BAA4B,CAC5B,mDAAmD,CAEvD,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,IAAI,EAAK,CAC1C,GAAI,CACF;AACA,GAAIR,OAAO,CAACC,GAAG,CAACQ,QAAQ,GAAK,aAAa,CAAE,CAC1CC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAC9C,MAAO,CAAAR,YAAY,CACrB,CAEA,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,IAAI,CAAC,GAAGd,OAAO,WAAW,CAAES,IAAI,CAAC,CAC9D,MAAO,CAAAI,QAAQ,CAACJ,IAAI,CACtB,CAAE,MAAOM,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtD;AACA,GAAId,OAAO,CAACC,GAAG,CAACQ,QAAQ,GAAK,aAAa,CAAE,CAC1CC,OAAO,CAACK,IAAI,CAAC,kCAAkC,CAAC,CAChD,MAAO,CAAAZ,YAAY,CACrB,CACA,KAAM,CAAAW,KAAK,CACb,CACF,CAAC,CAED,MAAO,MAAM,CAAAE,iBAAiB,CAAG,KAAO,CAAAC,MAAM,EAAK,CACjD,GAAI,CACF,KAAM,CAAAL,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,eAAekB,MAAM,EAAE,CAAC,CACnE,MAAO,CAAAL,QAAQ,CAACJ,IAAI,CACtB,CAAE,MAAOM,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC1D,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}