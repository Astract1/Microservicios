{"version":3,"file":"static/js/893.54672885.chunk.js","mappings":"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","sources":["services/riskService.js","components/RiskEvaluation.js"],"sourcesContent":["// src/services/riskService.js\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_RISK_API_URL || '/api/risk';\n\n// Mock data for development\nconst mockResponse = {\n  riskLevel: 'MEDIO',\n  riskFactors: [\n    'Exposición a contaminantes del aire',\n    'Condiciones médicas preexistentes'\n  ],\n  recommendations: [\n    'Usar mascarilla en exteriores',\n    'Mantener ventanas cerradas',\n    'Consultar con un médico si los síntomas persisten'\n  ]\n};\n\nexport const evaluateRisk = async (data) => {\n  try {\n    // For development, return mock data\n    if (process.env.NODE_ENV === 'development') {\n      console.log('Using mock data for development');\n      return mockResponse;\n    }\n\n    const response = await axios.post(`${API_URL}/evaluate`, data);\n    return response.data;\n  } catch (error) {\n    console.error('Error en evaluación de riesgo:', error);\n    // Return mock data if API fails\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('API call failed, using mock data');\n      return mockResponse;\n    }\n    throw error;\n  }\n};\n\nexport const getHistoricalData = async (userId) => {\n  try {\n    const response = await axios.get(`${API_URL}/historical/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error obteniendo datos históricos:', error);\n    throw error;\n  }\n};","// src/pages/RiskEvaluation.js\nimport React, { useState } from 'react';\nimport { evaluateRisk } from '../services/riskService';\nimport '../styles/RiskEvaluation.css';\n\nconst RiskEvaluation = () => {\n  const [formData, setFormData] = useState({\n    location: '',\n    userData: {\n      age: '',\n      medicalConditions: []\n    }\n  });\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setResult(null);\n\n    try {\n      const response = await evaluateRisk({\n        userData: {\n          age: parseInt(formData.userData.age),\n          medicalConditions: formData.userData.medicalConditions\n        },\n        location: formData.location\n      });\n      setResult(response);\n    } catch (err) {\n      console.error('Error submitting form:', err);\n      setError(err.message || 'Error al evaluar el riesgo');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"risk-evaluation\">\n        <div className=\"loading-container\">\n          <div className=\"loading-spinner\"></div>\n          <p>Evaluando riesgo...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"risk-evaluation\">\n      <h2>Nueva Evaluación de Riesgo</h2>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"location\">Ubicación</label>\n          <input\n            id=\"location\"\n            type=\"text\"\n            value={formData.location}\n            onChange={(e) => setFormData({\n              ...formData,\n              location: e.target.value\n            })}\n            placeholder=\"Ingrese una ubicación\"\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"age\">Edad</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            value={formData.userData.age}\n            onChange={(e) => setFormData({\n              ...formData,\n              userData: {\n                ...formData.userData,\n                age: e.target.value\n              }\n            })}\n            placeholder=\"Ingrese la edad\"\n            required\n            min=\"0\"\n            max=\"120\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"medicalConditions\">Condiciones Médicas</label>\n          <select\n            id=\"medicalConditions\"\n            multiple\n            value={formData.userData.medicalConditions}\n            onChange={(e) => setFormData({\n              ...formData,\n              userData: {\n                ...formData.userData,\n                medicalConditions: Array.from(\n                  e.target.selectedOptions,\n                  option => option.value\n                )\n              }\n            })}\n          >\n            <option value=\"asthma\">Asma</option>\n            <option value=\"heart\">Problemas Cardíacos</option>\n            <option value=\"respiratory\">Problemas Respiratorios</option>\n            <option value=\"allergies\">Alergias</option>\n          </select>\n          <p className=\"help-text\">Mantenga presionada la tecla Ctrl (Cmd en Mac) para seleccionar múltiples opciones</p>\n        </div>\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? 'Evaluando...' : 'Evaluar Riesgo'}\n        </button>\n      </form>\n\n      {error && (\n        <div className=\"error-message\">\n          <p>{error}</p>\n        </div>\n      )}\n\n      {result && (\n        <div className={`risk-result risk-${result.riskLevel.toLowerCase()}`}>\n          <h3>Resultado de la Evaluación</h3>\n          <p className=\"risk-level\">Nivel de Riesgo: {result.riskLevel}</p>\n          \n          <h4>Factores de Riesgo:</h4>\n          <ul>\n            {result.riskFactors.map((factor, index) => (\n              <li key={index}>{factor}</li>\n            ))}\n          </ul>\n\n          <h4>Recomendaciones:</h4>\n          <ul>\n            {result.recommendations.map((rec, index) => (\n              <li key={index}>{rec}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RiskEvaluation;"],"names":["API_URL","process","RiskEvaluation","formData","setFormData","useState","location","userData","age","medicalConditions","result","setResult","loading","setLoading","error","setError","_jsx","className","children","_jsxs","onSubmit","async","e","preventDefault","response","axios","post","data","console","evaluateRisk","parseInt","err","message","htmlFor","id","type","value","onChange","target","placeholder","required","min","max","multiple","Array","from","selectedOptions","option","disabled","riskLevel","toLowerCase","riskFactors","map","factor","index","recommendations","rec"],"sourceRoot":""}