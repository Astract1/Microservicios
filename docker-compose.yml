# Configuración de Docker Compose para Microservicios de Monitoreo Ambiental

services:
  # Servicio de Base de Datos MariaDB
  mariadb:
    image: mariadb:10.6
    container_name: monitoreo-ambiental-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-admin}
      MYSQL_DATABASE: monitoreo_ambiental
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./packages/node-monitoring/database-schema.sql:/docker-entrypoint-initdb.d/init-monitoring.sql
      - ./packages/node-education/database-schema.sql:/docker-entrypoint-initdb.d/init-education.sql
    ports:
      - "3306:3306"
    command: --bind-address=0.0.0.0
    networks:
      - monitoreo-network

  # Servicio Backend de Monitoreo Ambiental
  monitoreo-ambiental-api:
    build:
      context: ./packages/node-monitoring
      dockerfile: Dockerfile
    container_name: monitoreo-ambiental-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=mariadb
      - DB_USER=root
      - DB_PASSWORD=${DB_ROOT_PASSWORD:-admin}
      - DB_DATABASE=monitoreo_ambiental
      - IQAIR_API_KEY=${IQAIR_API_KEY}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - mariadb
    networks:
      - monitoreo-network

  # Servicio de Evaluación de Riesgos (dotnet-risk)
  dotnet-risk:
    build:
      context: ./packages/dotnet-risk
      dockerfile: Dockerfile
    container_name: dotnet-risk
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DATABASE_CONNECTION=Data Source=/data/RiskService.db
    volumes:
      - ./packages/dotnet-risk/RiskService.db:/data/RiskService.db

    ports:
      - "5002:80" # Mapeo del puerto del contenedor al host
    networks:
      - monitoreo-network

  dotnet-prevention:
    build:
      context: ./packages/dotnet-prevention
      dockerfile: Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - DATABASE_CONNECTION=${DATABASE_CONNECTION}
      - DOTNET_RISK_API_URL=${DOTNET_RISK_API_URL}
    depends_on:
      - dotnet-risk # Si este microservicio depende de otro llamado dotnet-risk
    networks:
      - monitoreo-network
  # Servicio de Educación Ambiental
  educacion-ambiental-api:
    build:
      context: ./packages/node-education
      dockerfile: Dockerfile
    container_name: educacion-ambiental-api
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DB_HOST=mariadb
      - DB_USER=root
      - DB_PASSWORD=${DB_ROOT_PASSWORD:-admin}
      - DB_DATABASE=monitoreo_ambiental
      - MONITORING_API_URL=http://monitoreo-ambiental-api:3000/api
    ports:
      - "3002:3002"
    depends_on:
      - mariadb
      - monitoreo-ambiental-api
    networks:
      - monitoreo-network

  # Interfaz de Usuario de Monitoreo
  ui-monitoring:
    build:
      context: ./packages/ui-monitoring
      dockerfile: Dockerfile
    container_name: monitoreo-ambiental-ui
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - monitoreo-ambiental-api
      - educacion-ambiental-api
    networks:
      - monitoreo-network
    environment:
      - REACT_APP_API_URL=/api
      - REACT_APP_EDUCATION_API_URL=/education-api

  # Servicio de Visualización de Datos (Grafana)
  grafana:
    image: grafana/grafana:latest
    container_name: monitoreo-ambiental-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - mariadb
    networks:
      - monitoreo-network

  # Herramienta de Administración de Base de Datos
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: monitoreo-ambiental-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mariadb
      PMA_USER: root
      PMA_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - monitoreo-network

# Volúmenes persistentes
volumes:
  mariadb_data:
  grafana_data:

# Red personalizada para comunicación entre servicios
networks:
  monitoreo-network:
    driver: bridge